# Python testing 101 with pytest

What is testing?
A guarantee of desired functionality that makes your code more self-documenting

Why would I test:
- safety net for future changes
- prove that the code works as desired
- give examples to other of how to use code

Why not unittest from the std library?
you can use a magic overloaded assert

oh, and by the way, here is how to set up a venv:
python3 -m  venv venv
source venv/bin/activate

The general flow for a test body is:
Setup, perform an action, and assert  # Arrange, Act, Assert

# Automating tests with pytest

sudo pip install -U pytest-xdist  # for parallelizing tests
pytest -n auto  # will spin up as many processes as you can for tests
                # Also, it is quite confusing to be honest

Fixtures are functions that pytest calls for you and can do useful work,
or return useful objects before your test runs.

Fixtures have three scopes:
- test  # this is the default I beleive
- modules
- session



